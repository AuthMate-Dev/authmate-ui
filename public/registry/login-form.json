{
    "name":  "login-form",
    "type":  "registry:component",
    "description":  "A complete login form with validation, social login options, and forgot password link",
    "dependencies":  [
                         "lucide-react"
                     ],
    "registryDependencies":  [
                                 "button",
                                 "input",
                                 "label",
                                 "separator",
                                 "card"
                             ],
    "files":  [
                  {
                      "content":  "\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Github, Mail, Eye, EyeOff, Loader2 } from \"lucide-react\"\nimport Link from \"next/link\"\n\ninterface LoginFormProps {\n  onSubmit?: (data: { email: string; password: string }) =\u003e void | Promise\u003cvoid\u003e\n  loading?: boolean\n  showSocial?: boolean\n  className?: string\n}\n\nexport function LoginForm({ \n  onSubmit, \n  loading = false, \n  showSocial = true, \n  className = \"\" \n}: LoginFormProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  })\n\n  const handleSubmit = async (event: React.FormEvent) =\u003e {\n    event.preventDefault()\n    setIsLoading(true)\n\n    try {\n      if (onSubmit) {\n        await onSubmit(formData)\n      } else {\n        // Default demo behavior\n        await new Promise(resolve =\u003e setTimeout(resolve, 2000))\n        alert(`Login successful for ${formData.email}!`)\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      alert(\"An error occurred during login. Please try again.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) =\u003e {\n    setFormData(prev =\u003e ({ ...prev, [field]: value }))\n  }\n\n  const isFormLoading = loading || isLoading\n\n  return (\n    \u003cCard className={`w-full max-w-md mx-auto ${className}`}\u003e\n      \u003cCardHeader className=\"space-y-1\"\u003e\n        \u003cCardTitle className=\"text-2xl font-bold text-center\"\u003eWelcome back\u003c/CardTitle\u003e\n        \u003cCardDescription className=\"text-center\"\u003e\n          Enter your credentials to access your account\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"grid gap-6\"\u003e\n          \u003cform onSubmit={handleSubmit}\u003e\n            \u003cdiv className=\"grid gap-4\"\u003e\n              \u003cdiv className=\"grid gap-2\"\u003e\n                \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n                \u003cInput\n                  id=\"email\"\n                  placeholder=\"name@example.com\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={(e) =\u003e handleInputChange(\"email\", e.target.value)}\n                  autoCapitalize=\"none\"\n                  autoComplete=\"email\"\n                  autoCorrect=\"off\"\n                  disabled={isFormLoading}\n                  required\n                /\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"grid gap-2\"\u003e\n                \u003cdiv className=\"flex items-center justify-between\"\u003e\n                  \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                  \u003cLink href=\"/forgot-password\" className=\"text-sm underline underline-offset-4 hover:text-primary\"\u003e\n                    Forgot password?\n                  \u003c/Link\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"relative\"\u003e\n                  \u003cInput\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    value={formData.password}\n                    onChange={(e) =\u003e handleInputChange(\"password\", e.target.value)}\n                    autoComplete=\"current-password\"\n                    disabled={isFormLoading}\n                    required\n                    className=\"pr-10\"\n                  /\u003e\n                  \u003cButton\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={() =\u003e setShowPassword(!showPassword)}\n                    disabled={isFormLoading}\n                  \u003e\n                    {showPassword ? (\n                      \u003cEyeOff className=\"h-4 w-4 text-muted-foreground\" /\u003e\n                    ) : (\n                      \u003cEye className=\"h-4 w-4 text-muted-foreground\" /\u003e\n                    )}\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cButton disabled={isFormLoading} type=\"submit\" className=\"w-full\"\u003e\n                {isFormLoading \u0026\u0026 \u003cLoader2 className=\"mr-2 h-4 w-4 animate-spin\" /\u003e}\n                Sign In\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/form\u003e\n\n          {showSocial \u0026\u0026 (\n            \u003c\u003e\n              \u003cdiv className=\"relative\"\u003e\n                \u003cdiv className=\"absolute inset-0 flex items-center\"\u003e\n                  \u003cSeparator /\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"relative flex justify-center text-xs uppercase\"\u003e\n                  \u003cspan className=\"bg-background px-2 text-muted-foreground\"\u003eOr continue with\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n                \u003cButton variant=\"outline\" disabled={isFormLoading}\u003e\n                  \u003cGithub className=\"mr-2 h-4 w-4\" /\u003e\n                  GitHub\n                \u003c/Button\u003e\n                \u003cButton variant=\"outline\" disabled={isFormLoading}\u003e\n                  \u003cMail className=\"mr-2 h-4 w-4\" /\u003e\n                  Google\n                \u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/\u003e\n          )}\n\n          \u003cdiv className=\"text-center text-sm\"\u003e\n            Don\u0027t have an account?{\" \"}\n            \u003cLink href=\"/signup\" className=\"underline underline-offset-4 hover:text-primary\"\u003e\n              Sign up\n            \u003c/Link\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  )\n}",
                      "type":  "registry:ui",
                      "path":  "login-form.tsx"
                  }
              ],
    "tailwind":  {
                     "config":  {
                                    "content":  [
                                                    "./components/**/*.{js,ts,jsx,tsx}"
                                                ]
                                }
                 }
}

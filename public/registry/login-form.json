{
  "name": "login-form",
  "type": "components:auth",
  "description": "A complete login form with validation, social login options, and forgot password link",
  "dependencies": ["lucide-react"],
  "registryDependencies": ["button", "input", "label", "separator", "card"],
  "files": [
    {
      "name": "login-form.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Github, Mail, Eye, EyeOff, Loader2 } from \"lucide-react\"\nimport Link from \"next/link\"\n\ninterface LoginFormProps {\n  onSubmit?: (data: { email: string; password: string }) => void | Promise<void>\n  loading?: boolean\n  showSocial?: boolean\n  className?: string\n}\n\nexport function LoginForm({ \n  onSubmit, \n  loading = false, \n  showSocial = true, \n  className = \"\" \n}: LoginFormProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  })\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    setIsLoading(true)\n\n    try {\n      if (onSubmit) {\n        await onSubmit(formData)\n      } else {\n        // Default demo behavior\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        alert(`Login successful for ${formData.email}!`)\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      alert(\"An error occurred during login. Please try again.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n  }\n\n  const isFormLoading = loading || isLoading\n\n  return (\n    <Card className={`w-full max-w-md mx-auto ${className}`}>\n      <CardHeader className=\"space-y-1\">\n        <CardTitle className=\"text-2xl font-bold text-center\">Welcome back</CardTitle>\n        <CardDescription className=\"text-center\">\n          Enter your credentials to access your account\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid gap-6\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  placeholder=\"name@example.com\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                  autoCapitalize=\"none\"\n                  autoComplete=\"email\"\n                  autoCorrect=\"off\"\n                  disabled={isFormLoading}\n                  required\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <div className=\"flex items-center justify-between\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <Link href=\"/forgot-password\" className=\"text-sm underline underline-offset-4 hover:text-primary\">\n                    Forgot password?\n                  </Link>\n                </div>\n                <div className=\"relative\">\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    value={formData.password}\n                    onChange={(e) => handleInputChange(\"password\", e.target.value)}\n                    autoComplete=\"current-password\"\n                    disabled={isFormLoading}\n                    required\n                    className=\"pr-10\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    disabled={isFormLoading}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-4 w-4 text-muted-foreground\" />\n                    ) : (\n                      <Eye className=\"h-4 w-4 text-muted-foreground\" />\n                    )}\n                  </Button>\n                </div>\n              </div>\n              <Button disabled={isFormLoading} type=\"submit\" className=\"w-full\">\n                {isFormLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Sign In\n              </Button>\n            </div>\n          </form>\n\n          {showSocial && (\n            <>\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <Separator />\n                </div>\n                <div className=\"relative flex justify-center text-xs uppercase\">\n                  <span className=\"bg-background px-2 text-muted-foreground\">Or continue with</span>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Button variant=\"outline\" disabled={isFormLoading}>\n                  <Github className=\"mr-2 h-4 w-4\" />\n                  GitHub\n                </Button>\n                <Button variant=\"outline\" disabled={isFormLoading}>\n                  <Mail className=\"mr-2 h-4 w-4\" />\n                  Google\n                </Button>\n              </div>\n            </>\n          )}\n\n          <div className=\"text-center text-sm\">\n            Don't have an account?{\" \"}\n            <Link href=\"/signup\" className=\"underline underline-offset-4 hover:text-primary\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}"
    }
  ],
  "tailwind": {
    "config": {
      "content": ["./components/**/*.{js,ts,jsx,tsx}"]
    }
  }
}

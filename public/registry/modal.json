{
    "$schema":  "https://ui.shadcn.com/schema/registry-item.json",
    "name":  "modal",
    "type":  "registry:ui",
    "description":  "A modal dialog component built on top of Radix UI Dialog.",
    "dependencies":  [
                         "@radix-ui/react-dialog",
                         "clsx",
                         "tailwind-merge"
                     ],
    "files":  [
                  {
                      "name":  "modal.tsx",
                      "content":  "import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Modal = DialogPrimitive.Root\n\nconst ModalTrigger = DialogPrimitive.Trigger\n\nconst ModalPortal = DialogPrimitive.Portal\n\nconst ModalClose = DialogPrimitive.Close\n\nconst ModalOverlay = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Overlay\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Overlay\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nModalOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst ModalContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Content\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cModalPortal\u003e\n    \u003cModalOverlay /\u003e\n    \u003cDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    \u003e\n      {children}\n      \u003cDialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\u003e\n        \u003cX className=\"h-4 w-4\" /\u003e\n        \u003cspan className=\"sr-only\"\u003eClose\u003c/span\u003e\n      \u003c/DialogPrimitive.Close\u003e\n    \u003c/DialogPrimitive.Content\u003e\n  \u003c/ModalPortal\u003e\n))\nModalContent.displayName = DialogPrimitive.Content.displayName\n\nconst ModalHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nModalHeader.displayName = \"ModalHeader\"\n\nconst ModalFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nModalFooter.displayName = \"ModalFooter\"\n\nconst ModalTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nModalTitle.displayName = DialogPrimitive.Title.displayName\n\nconst ModalDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nModalDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Modal,\n  ModalPortal,\n  ModalOverlay,\n  ModalClose,\n  ModalTrigger,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalTitle,\n  ModalDescription,\n}",
                      "type":  "registry:ui"
                  }
              ]
}

{
    "name":  "navbar",
    "type":  "registry:ui",
    "dependencies":  [
                         "framer-motion",
                         "lucide-react"
                     ],
    "files":  [
                  {
                      "content":  "\"use client\"\n\nimport * as React from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Menu, X } from \"lucide-react\"\n\ninterface NavItem {\n  label: string\n  href: string\n  isActive?: boolean\n}\n\ninterface NavbarProps {\n  brand?: React.ReactNode\n  items?: NavItem[]\n  actions?: React.ReactNode\n  sticky?: boolean\n  className?: string\n}\n\nconst Navbar = ({ \n  brand, \n  items = [], \n  actions, \n  sticky = true, \n  className \n}: NavbarProps) =\u003e {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = React.useState(false)\n\n  return (\n    \u003cmotion.nav\n      initial={{ y: -100, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.3 }}\n      className={cn(\n        \"w-full bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b border-border\",\n        sticky \u0026\u0026 \"sticky top-0 z-50\",\n        className\n      )}\n    \u003e\n      \u003cdiv className=\"container mx-auto px-4\"\u003e\n        \u003cdiv className=\"flex items-center justify-between h-16\"\u003e\n          {/* Brand */}\n          {brand \u0026\u0026 (\n            \u003cmotion.div\n              whileHover={{ scale: 1.05 }}\n              className=\"flex-shrink-0 font-bold text-lg\"\n            \u003e\n              {brand}\n            \u003c/motion.div\u003e\n          )}\n\n          {/* Desktop Navigation */}\n          \u003cdiv className=\"hidden md:flex items-center space-x-8\"\u003e\n            {items.map((item, index) =\u003e (\n              \u003cmotion.a\n                key={item.href}\n                href={item.href}\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n                className={cn(\n                  \"text-sm font-medium transition-colors hover:text-primary relative\",\n                  item.isActive \n                    ? \"text-primary\" \n                    : \"text-muted-foreground hover:text-foreground\"\n                )}\n              \u003e\n                {item.label}\n                {item.isActive \u0026\u0026 (\n                  \u003cmotion.div\n                    layoutId=\"activeTab\"\n                    className=\"absolute -bottom-1 left-0 right-0 h-0.5 bg-primary rounded-full\"\n                    initial={false}\n                    transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\n                  /\u003e\n                )}\n              \u003c/motion.a\u003e\n            ))}\n          \u003c/div\u003e\n\n          {/* Actions */}\n          {actions \u0026\u0026 (\n            \u003cdiv className=\"hidden md:flex items-center space-x-2\"\u003e\n              {actions}\n            \u003c/div\u003e\n          )}\n\n          {/* Mobile Menu Button */}\n          \u003cButton\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"md:hidden\"\n            onClick={() =\u003e setIsMobileMenuOpen(!isMobileMenuOpen)}\n          \u003e\n            {isMobileMenuOpen ? (\n              \u003cX className=\"h-5 w-5\" /\u003e\n            ) : (\n              \u003cMenu className=\"h-5 w-5\" /\u003e\n            )}\n          \u003c/Button\u003e\n        \u003c/div\u003e\n\n        {/* Mobile Menu */}\n        \u003cAnimatePresence\u003e\n          {isMobileMenuOpen \u0026\u0026 (\n            \u003cmotion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: \"auto\" }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.2 }}\n              className=\"md:hidden border-t border-border\"\n            \u003e\n              \u003cdiv className=\"py-4 space-y-2\"\u003e\n                {items.map((item) =\u003e (\n                  \u003ca\n                    key={item.href}\n                    href={item.href}\n                    className={cn(\n                      \"block px-4 py-2 text-sm font-medium rounded-lg transition-colors\",\n                      item.isActive\n                        ? \"bg-primary text-primary-foreground\"\n                        : \"text-muted-foreground hover:text-foreground hover:bg-accent\"\n                    )}\n                    onClick={() =\u003e setIsMobileMenuOpen(false)}\n                  \u003e\n                    {item.label}\n                  \u003c/a\u003e\n                ))}\n                {actions \u0026\u0026 (\n                  \u003cdiv className=\"px-4 pt-2 border-t border-border\"\u003e\n                    {actions}\n                  \u003c/div\u003e\n                )}\n              \u003c/div\u003e\n            \u003c/motion.div\u003e\n          )}\n        \u003c/AnimatePresence\u003e\n      \u003c/div\u003e\n    \u003c/motion.nav\u003e\n  )\n}\n\nexport { Navbar, type NavItem }",
                      "type":  "registry:ui",
                      "path":  "navbar.tsx"
                  }
              ]
}

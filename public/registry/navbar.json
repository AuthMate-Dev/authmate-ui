{
  "name": "navbar",
  "type": "components:ui",
  "dependencies": ["framer-motion", "lucide-react"],
  "files": [
    {
      "name": "navbar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Menu, X } from \"lucide-react\"\n\ninterface NavItem {\n  label: string\n  href: string\n  isActive?: boolean\n}\n\ninterface NavbarProps {\n  brand?: React.ReactNode\n  items?: NavItem[]\n  actions?: React.ReactNode\n  sticky?: boolean\n  className?: string\n}\n\nconst Navbar = ({ \n  brand, \n  items = [], \n  actions, \n  sticky = true, \n  className \n}: NavbarProps) => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = React.useState(false)\n\n  return (\n    <motion.nav\n      initial={{ y: -100, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.3 }}\n      className={cn(\n        \"w-full bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b border-border\",\n        sticky && \"sticky top-0 z-50\",\n        className\n      )}\n    >\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Brand */}\n          {brand && (\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              className=\"flex-shrink-0 font-bold text-lg\"\n            >\n              {brand}\n            </motion.div>\n          )}\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {items.map((item, index) => (\n              <motion.a\n                key={item.href}\n                href={item.href}\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n                className={cn(\n                  \"text-sm font-medium transition-colors hover:text-primary relative\",\n                  item.isActive \n                    ? \"text-primary\" \n                    : \"text-muted-foreground hover:text-foreground\"\n                )}\n              >\n                {item.label}\n                {item.isActive && (\n                  <motion.div\n                    layoutId=\"activeTab\"\n                    className=\"absolute -bottom-1 left-0 right-0 h-0.5 bg-primary rounded-full\"\n                    initial={false}\n                    transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\n                  />\n                )}\n              </motion.a>\n            ))}\n          </div>\n\n          {/* Actions */}\n          {actions && (\n            <div className=\"hidden md:flex items-center space-x-2\">\n              {actions}\n            </div>\n          )}\n\n          {/* Mobile Menu Button */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"md:hidden\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          >\n            {isMobileMenuOpen ? (\n              <X className=\"h-5 w-5\" />\n            ) : (\n              <Menu className=\"h-5 w-5\" />\n            )}\n          </Button>\n        </div>\n\n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {isMobileMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: \"auto\" }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.2 }}\n              className=\"md:hidden border-t border-border\"\n            >\n              <div className=\"py-4 space-y-2\">\n                {items.map((item) => (\n                  <a\n                    key={item.href}\n                    href={item.href}\n                    className={cn(\n                      \"block px-4 py-2 text-sm font-medium rounded-lg transition-colors\",\n                      item.isActive\n                        ? \"bg-primary text-primary-foreground\"\n                        : \"text-muted-foreground hover:text-foreground hover:bg-accent\"\n                    )}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    {item.label}\n                  </a>\n                ))}\n                {actions && (\n                  <div className=\"px-4 pt-2 border-t border-border\">\n                    {actions}\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </motion.nav>\n  )\n}\n\nexport { Navbar, type NavItem }"
    }
  ]
}

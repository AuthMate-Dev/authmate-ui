{
    "name":  "pricing",
    "type":  "registry:ui",
    "dependencies":  [
                         "framer-motion",
                         "lucide-react"
                     ],
    "registryDependencies":  [
                                 "button",
                                 "card",
                                 "badge",
                                 "switch",
                                 "label"
                             ],
    "files":  [
                  {
                      "content":  "\"use client\"\n\nimport { useState } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Check, X } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Label } from \"@/components/ui/label\"\n\nexport interface PricingPlan {\n  id: string\n  name: string\n  description: string\n  monthlyPrice: number\n  yearlyPrice: number\n  features: string[]\n  limitations?: string[]\n  popular?: boolean\n  buttonText: string\n  buttonVariant?: \"default\" | \"outline\" | \"secondary\"\n}\n\nexport interface PricingProps {\n  plans?: PricingPlan[]\n  defaultCycle?: \"monthly\" | \"yearly\"\n  showToggle?: boolean\n  className?: string\n}\n\nconst defaultPlans: PricingPlan[] = [\n  {\n    id: \"free\",\n    name: \"Free\",\n    description: \"Perfect for getting started\",\n    monthlyPrice: 0,\n    yearlyPrice: 0,\n    features: [\n      \"5 components\",\n      \"Basic documentation\",\n      \"Community support\",\n      \"MIT license\",\n    ],\n    limitations: [\n      \"Limited components\",\n      \"No priority support\",\n    ],\n    buttonText: \"Get Started\",\n    buttonVariant: \"outline\",\n  },\n  {\n    id: \"pro\",\n    name: \"Pro\",\n    description: \"Best for professional developers\",\n    monthlyPrice: 29,\n    yearlyPrice: 24,\n    features: [\n      \"50+ components\",\n      \"Advanced documentation\",\n      \"Priority support\",\n      \"Commercial license\",\n      \"Figma files\",\n      \"Custom themes\",\n    ],\n    popular: true,\n    buttonText: \"Start Free Trial\",\n    buttonVariant: \"default\",\n  },\n  {\n    id: \"enterprise\",\n    name: \"Enterprise\",\n    description: \"For large teams and organizations\",\n    monthlyPrice: 99,\n    yearlyPrice: 79,\n    features: [\n      \"Unlimited components\",\n      \"Custom components\",\n      \"24/7 support\",\n      \"Team collaboration\",\n      \"Advanced analytics\",\n      \"Custom integrations\",\n      \"Dedicated account manager\",\n    ],\n    buttonText: \"Contact Sales\",\n    buttonVariant: \"outline\",\n  },\n]\n\nexport function Pricing({\n  plans = defaultPlans,\n  defaultCycle = \"monthly\",\n  showToggle = true,\n  className,\n}: PricingProps) {\n  const [billingCycle, setBillingCycle] = useState\u003c\"monthly\" | \"yearly\"\u003e(defaultCycle)\n\n  const getPrice = (plan: PricingPlan) =\u003e {\n    return billingCycle === \"yearly\" ? plan.yearlyPrice : plan.monthlyPrice\n  }\n\n  const getSavings = (plan: PricingPlan) =\u003e {\n    if (plan.monthlyPrice === 0) return 0\n    const yearlyTotal = plan.yearlyPrice * 12\n    const monthlyTotal = plan.monthlyPrice * 12\n    return Math.round(((monthlyTotal - yearlyTotal) / monthlyTotal) * 100)\n  }\n\n  return (\n    \u003cdiv className={className}\u003e\n      \u003cdiv className=\"text-center space-y-4 mb-12\"\u003e\n        \u003ch2 className=\"text-3xl font-bold\"\u003eChoose Your Plan\u003c/h2\u003e\n        \u003cp className=\"text-lg text-muted-foreground max-w-2xl mx-auto\"\u003e\n          Start building beautiful interfaces today. Upgrade or downgrade at any time.\n        \u003c/p\u003e\n        \n        {showToggle \u0026\u0026 (\n          \u003cdiv className=\"flex items-center justify-center gap-4\"\u003e\n            \u003cLabel htmlFor=\"billing-toggle\" className={billingCycle === \"monthly\" ? \"font-semibold\" : \"\"}\u003e\n              Monthly\n            \u003c/Label\u003e\n            \u003cSwitch\n              id=\"billing-toggle\"\n              checked={billingCycle === \"yearly\"}\n              onCheckedChange={(checked) =\u003e setBillingCycle(checked ? \"yearly\" : \"monthly\")}\n            /\u003e\n            \u003cLabel htmlFor=\"billing-toggle\" className={billingCycle === \"yearly\" ? \"font-semibold\" : \"\"}\u003e\n              Yearly\n            \u003c/Label\u003e\n            {billingCycle === \"yearly\" \u0026\u0026 (\n              \u003cBadge variant=\"secondary\" className=\"ml-2\"\u003e\n                Save up to 17%\n              \u003c/Badge\u003e\n            )}\n          \u003c/div\u003e\n        )}\n      \u003c/div\u003e\n\n      \u003cdiv className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\"\u003e\n        {plans.map((plan, index) =\u003e (\n          \u003cmotion.div\n            key={plan.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: index * 0.1 }}\n            className=\"relative\"\n          \u003e\n            {plan.popular \u0026\u0026 (\n              \u003cdiv className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\"\u003e\n                \u003cBadge className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white\"\u003e\n                  Most Popular\n                \u003c/Badge\u003e\n              \u003c/div\u003e\n            )}\n            \n            \u003cCard className={`h-full ${plan.popular ? \"border-primary shadow-lg scale-105\" : \"\"}`}\u003e\n              \u003cCardHeader className=\"text-center space-y-4\"\u003e\n                \u003cCardTitle className=\"text-2xl\"\u003e{plan.name}\u003c/CardTitle\u003e\n                \u003cCardDescription\u003e{plan.description}\u003c/CardDescription\u003e\n                \n                \u003cdiv className=\"space-y-2\"\u003e\n                  \u003cdiv className=\"flex items-baseline justify-center gap-1\"\u003e\n                    \u003cspan className=\"text-4xl font-bold\"\u003e\n                      ${getPrice(plan)}\n                    \u003c/span\u003e\n                    {plan.monthlyPrice \u003e 0 \u0026\u0026 (\n                      \u003cspan className=\"text-muted-foreground\"\u003e\n                        /{billingCycle === \"yearly\" ? \"month\" : \"month\"}\n                      \u003c/span\u003e\n                    )}\n                  \u003c/div\u003e\n                  \n                  {billingCycle === \"yearly\" \u0026\u0026 plan.monthlyPrice \u003e 0 \u0026\u0026 (\n                    \u003cdiv className=\"text-sm text-muted-foreground\"\u003e\n                      Billed annually (${plan.yearlyPrice * 12}/year)\n                      {getSavings(plan) \u003e 0 \u0026\u0026 (\n                        \u003cBadge variant=\"outline\" className=\"ml-2\"\u003e\n                          Save {getSavings(plan)}%\n                        \u003c/Badge\u003e\n                      )}\n                    \u003c/div\u003e\n                  )}\n                \u003c/div\u003e\n              \u003c/CardHeader\u003e\n\n              \u003cCardContent className=\"space-y-6\"\u003e\n                \u003cButton \n                  className=\"w-full\" \n                  variant={plan.buttonVariant}\n                  size=\"lg\"\n                \u003e\n                  {plan.buttonText}\n                \u003c/Button\u003e\n\n                \u003cdiv className=\"space-y-3\"\u003e\n                  \u003ch4 className=\"font-semibold text-sm\"\u003eWhat\u0027s included:\u003c/h4\u003e\n                  \u003cul className=\"space-y-2\"\u003e\n                    {plan.features.map((feature, featureIndex) =\u003e (\n                      \u003cli key={`${plan.id}-feature-${featureIndex}`} className=\"flex items-center gap-3\"\u003e\n                        \u003cCheck className=\"h-4 w-4 text-green-500 flex-shrink-0\" /\u003e\n                        \u003cspan className=\"text-sm\"\u003e{feature}\u003c/span\u003e\n                      \u003c/li\u003e\n                    ))}\n                  \u003c/ul\u003e\n                  \n                  {plan.limitations \u0026\u0026 plan.limitations.length \u003e 0 \u0026\u0026 (\n                    \u003cul className=\"space-y-2 pt-2 border-t\"\u003e\n                      {plan.limitations.map((limitation, limitationIndex) =\u003e (\n                        \u003cli key={`${plan.id}-limitation-${limitationIndex}`} className=\"flex items-center gap-3\"\u003e\n                          \u003cX className=\"h-4 w-4 text-red-500 flex-shrink-0\" /\u003e\n                          \u003cspan className=\"text-sm text-muted-foreground\"\u003e{limitation}\u003c/span\u003e\n                        \u003c/li\u003e\n                      ))}\n                    \u003c/ul\u003e\n                  )}\n                \u003c/div\u003e\n              \u003c/CardContent\u003e\n            \u003c/Card\u003e\n          \u003c/motion.div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}",
                      "type":  "registry:ui",
                      "path":  "pricing.tsx"
                  }
              ]
}

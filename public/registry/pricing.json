{
  "name": "pricing",
  "type": "components:ui",
  "dependencies": ["framer-motion", "lucide-react"],
  "registryDependencies": ["button", "card", "badge", "switch", "label"],
  "files": [
    {
      "name": "pricing.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Check, X } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Label } from \"@/components/ui/label\"\n\nexport interface PricingPlan {\n  id: string\n  name: string\n  description: string\n  monthlyPrice: number\n  yearlyPrice: number\n  features: string[]\n  limitations?: string[]\n  popular?: boolean\n  buttonText: string\n  buttonVariant?: \"default\" | \"outline\" | \"secondary\"\n}\n\nexport interface PricingProps {\n  plans?: PricingPlan[]\n  defaultCycle?: \"monthly\" | \"yearly\"\n  showToggle?: boolean\n  className?: string\n}\n\nconst defaultPlans: PricingPlan[] = [\n  {\n    id: \"free\",\n    name: \"Free\",\n    description: \"Perfect for getting started\",\n    monthlyPrice: 0,\n    yearlyPrice: 0,\n    features: [\n      \"5 components\",\n      \"Basic documentation\",\n      \"Community support\",\n      \"MIT license\",\n    ],\n    limitations: [\n      \"Limited components\",\n      \"No priority support\",\n    ],\n    buttonText: \"Get Started\",\n    buttonVariant: \"outline\",\n  },\n  {\n    id: \"pro\",\n    name: \"Pro\",\n    description: \"Best for professional developers\",\n    monthlyPrice: 29,\n    yearlyPrice: 24,\n    features: [\n      \"50+ components\",\n      \"Advanced documentation\",\n      \"Priority support\",\n      \"Commercial license\",\n      \"Figma files\",\n      \"Custom themes\",\n    ],\n    popular: true,\n    buttonText: \"Start Free Trial\",\n    buttonVariant: \"default\",\n  },\n  {\n    id: \"enterprise\",\n    name: \"Enterprise\",\n    description: \"For large teams and organizations\",\n    monthlyPrice: 99,\n    yearlyPrice: 79,\n    features: [\n      \"Unlimited components\",\n      \"Custom components\",\n      \"24/7 support\",\n      \"Team collaboration\",\n      \"Advanced analytics\",\n      \"Custom integrations\",\n      \"Dedicated account manager\",\n    ],\n    buttonText: \"Contact Sales\",\n    buttonVariant: \"outline\",\n  },\n]\n\nexport function Pricing({\n  plans = defaultPlans,\n  defaultCycle = \"monthly\",\n  showToggle = true,\n  className,\n}: PricingProps) {\n  const [billingCycle, setBillingCycle] = useState<\"monthly\" | \"yearly\">(defaultCycle)\n\n  const getPrice = (plan: PricingPlan) => {\n    return billingCycle === \"yearly\" ? plan.yearlyPrice : plan.monthlyPrice\n  }\n\n  const getSavings = (plan: PricingPlan) => {\n    if (plan.monthlyPrice === 0) return 0\n    const yearlyTotal = plan.yearlyPrice * 12\n    const monthlyTotal = plan.monthlyPrice * 12\n    return Math.round(((monthlyTotal - yearlyTotal) / monthlyTotal) * 100)\n  }\n\n  return (\n    <div className={className}>\n      <div className=\"text-center space-y-4 mb-12\">\n        <h2 className=\"text-3xl font-bold\">Choose Your Plan</h2>\n        <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n          Start building beautiful interfaces today. Upgrade or downgrade at any time.\n        </p>\n        \n        {showToggle && (\n          <div className=\"flex items-center justify-center gap-4\">\n            <Label htmlFor=\"billing-toggle\" className={billingCycle === \"monthly\" ? \"font-semibold\" : \"\"}>\n              Monthly\n            </Label>\n            <Switch\n              id=\"billing-toggle\"\n              checked={billingCycle === \"yearly\"}\n              onCheckedChange={(checked) => setBillingCycle(checked ? \"yearly\" : \"monthly\")}\n            />\n            <Label htmlFor=\"billing-toggle\" className={billingCycle === \"yearly\" ? \"font-semibold\" : \"\"}>\n              Yearly\n            </Label>\n            {billingCycle === \"yearly\" && (\n              <Badge variant=\"secondary\" className=\"ml-2\">\n                Save up to 17%\n              </Badge>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\">\n        {plans.map((plan, index) => (\n          <motion.div\n            key={plan.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: index * 0.1 }}\n            className=\"relative\"\n          >\n            {plan.popular && (\n              <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                <Badge className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\n                  Most Popular\n                </Badge>\n              </div>\n            )}\n            \n            <Card className={`h-full ${plan.popular ? \"border-primary shadow-lg scale-105\" : \"\"}`}>\n              <CardHeader className=\"text-center space-y-4\">\n                <CardTitle className=\"text-2xl\">{plan.name}</CardTitle>\n                <CardDescription>{plan.description}</CardDescription>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex items-baseline justify-center gap-1\">\n                    <span className=\"text-4xl font-bold\">\n                      ${getPrice(plan)}\n                    </span>\n                    {plan.monthlyPrice > 0 && (\n                      <span className=\"text-muted-foreground\">\n                        /{billingCycle === \"yearly\" ? \"month\" : \"month\"}\n                      </span>\n                    )}\n                  </div>\n                  \n                  {billingCycle === \"yearly\" && plan.monthlyPrice > 0 && (\n                    <div className=\"text-sm text-muted-foreground\">\n                      Billed annually (${plan.yearlyPrice * 12}/year)\n                      {getSavings(plan) > 0 && (\n                        <Badge variant=\"outline\" className=\"ml-2\">\n                          Save {getSavings(plan)}%\n                        </Badge>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </CardHeader>\n\n              <CardContent className=\"space-y-6\">\n                <Button \n                  className=\"w-full\" \n                  variant={plan.buttonVariant}\n                  size=\"lg\"\n                >\n                  {plan.buttonText}\n                </Button>\n\n                <div className=\"space-y-3\">\n                  <h4 className=\"font-semibold text-sm\">What's included:</h4>\n                  <ul className=\"space-y-2\">\n                    {plan.features.map((feature, featureIndex) => (\n                      <li key={`${plan.id}-feature-${featureIndex}`} className=\"flex items-center gap-3\">\n                        <Check className=\"h-4 w-4 text-green-500 flex-shrink-0\" />\n                        <span className=\"text-sm\">{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  {plan.limitations && plan.limitations.length > 0 && (\n                    <ul className=\"space-y-2 pt-2 border-t\">\n                      {plan.limitations.map((limitation, limitationIndex) => (\n                        <li key={`${plan.id}-limitation-${limitationIndex}`} className=\"flex items-center gap-3\">\n                          <X className=\"h-4 w-4 text-red-500 flex-shrink-0\" />\n                          <span className=\"text-sm text-muted-foreground\">{limitation}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  )\n}"
    }
  ]
}

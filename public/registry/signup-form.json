{
    "name":  "signup-form",
    "type":  "registry:component",
    "dependencies":  [
                         "lucide-react",
                         "react-hook-form",
                         "@hookform/resolvers",
                         "zod"
                     ],
    "registryDependencies":  [
                                 "button",
                                 "input",
                                 "label",
                                 "card",
                                 "checkbox",
                                 "separator"
                             ],
    "files":  [
                  {
                      "content":  "\"use client\"\n\nimport { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport { Eye, EyeOff, Github, Mail, Loader2 } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { cn } from \"@/lib/utils\"\n\nconst signupSchema = z.object({\n  firstName: z.string().min(2, \"First name must be at least 2 characters\"),\n  lastName: z.string().min(2, \"Last name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(8, \"Password must be at least 8 characters\"),\n  confirmPassword: z.string(),\n  agreeToTerms: z.boolean().refine(val =\u003e val === true, \"You must agree to the terms and conditions\")\n}).refine((data) =\u003e data.password === data.confirmPassword, {\n  message: \"Passwords don\u0027t match\",\n  path: [\"confirmPassword\"],\n})\n\ntype SignupFormData = z.infer\u003ctypeof signupSchema\u003e\n\ninterface SignupFormProps {\n  onSubmit?: (data: SignupFormData) =\u003e void | Promise\u003cvoid\u003e\n  loading?: boolean\n  showSocial?: boolean\n  className?: string\n}\n\nexport function SignupForm({\n  onSubmit,\n  loading = false,\n  showSocial = true,\n  className\n}: SignupFormProps) {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    setValue,\n    watch\n  } = useForm\u003cSignupFormData\u003e({\n    resolver: zodResolver(signupSchema)\n  })\n\n  const agreeToTerms = watch(\"agreeToTerms\")\n\n  const onSubmitForm = async (data: SignupFormData) =\u003e {\n    if (onSubmit) {\n      await onSubmit(data)\n    }\n  }\n\n  const isLoading = loading || isSubmitting\n\n  return (\n    \u003cCard className={cn(\"w-full max-w-md mx-auto\", className)}\u003e\n      \u003cCardHeader className=\"space-y-1\"\u003e\n        \u003cCardTitle className=\"text-2xl font-bold text-center\"\u003eCreate an account\u003c/CardTitle\u003e\n        \u003cCardDescription className=\"text-center\"\u003e\n          Enter your details below to create your account\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {showSocial \u0026\u0026 (\n          \u003c\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" disabled={isLoading}\u003e\n                \u003cGithub className=\"mr-2 h-4 w-4\" /\u003e\n                GitHub\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" disabled={isLoading}\u003e\n                \u003cMail className=\"mr-2 h-4 w-4\" /\u003e\n                Google\n              \u003c/Button\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cdiv className=\"absolute inset-0 flex items-center\"\u003e\n                \u003cSeparator className=\"w-full\" /\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"relative flex justify-center text-xs uppercase\"\u003e\n                \u003cspan className=\"bg-background px-2 text-muted-foreground\"\u003eOr continue with\u003c/span\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/\u003e\n        )}\n\n        \u003cform onSubmit={handleSubmit(onSubmitForm)} className=\"space-y-4\"\u003e\n          \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"firstName\"\u003eFirst name\u003c/Label\u003e\n              \u003cInput\n                id=\"firstName\"\n                placeholder=\"John\"\n                disabled={isLoading}\n                {...register(\"firstName\")}\n              /\u003e\n              {errors.firstName \u0026\u0026 (\n                \u003cp className=\"text-sm text-red-600\"\u003e{errors.firstName.message}\u003c/p\u003e\n              )}\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"lastName\"\u003eLast name\u003c/Label\u003e\n              \u003cInput\n                id=\"lastName\"\n                placeholder=\"Doe\"\n                disabled={isLoading}\n                {...register(\"lastName\")}\n              /\u003e\n              {errors.lastName \u0026\u0026 (\n                \u003cp className=\"text-sm text-red-600\"\u003e{errors.lastName.message}\u003c/p\u003e\n              )}\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv className=\"space-y-2\"\u003e\n            \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n            \u003cInput\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"john@example.com\"\n              disabled={isLoading}\n              {...register(\"email\")}\n            /\u003e\n            {errors.email \u0026\u0026 (\n              \u003cp className=\"text-sm text-red-600\"\u003e{errors.email.message}\u003c/p\u003e\n            )}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"space-y-2\"\u003e\n            \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cInput\n                id=\"password\"\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter your password\"\n                disabled={isLoading}\n                {...register(\"password\")}\n              /\u003e\n              \u003cButton\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                onClick={() =\u003e setShowPassword(!showPassword)}\n                disabled={isLoading}\n              \u003e\n                {showPassword ? (\n                  \u003cEyeOff className=\"h-4 w-4\" /\u003e\n                ) : (\n                  \u003cEye className=\"h-4 w-4\" /\u003e\n                )}\n              \u003c/Button\u003e\n            \u003c/div\u003e\n            {errors.password \u0026\u0026 (\n              \u003cp className=\"text-sm text-red-600\"\u003e{errors.password.message}\u003c/p\u003e\n            )}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"space-y-2\"\u003e\n            \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm password\u003c/Label\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cInput\n                id=\"confirmPassword\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                placeholder=\"Confirm your password\"\n                disabled={isLoading}\n                {...register(\"confirmPassword\")}\n              /\u003e\n              \u003cButton\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                onClick={() =\u003e setShowConfirmPassword(!showConfirmPassword)}\n                disabled={isLoading}\n              \u003e\n                {showConfirmPassword ? (\n                  \u003cEyeOff className=\"h-4 w-4\" /\u003e\n                ) : (\n                  \u003cEye className=\"h-4 w-4\" /\u003e\n                )}\n              \u003c/Button\u003e\n            \u003c/div\u003e\n            {errors.confirmPassword \u0026\u0026 (\n              \u003cp className=\"text-sm text-red-600\"\u003e{errors.confirmPassword.message}\u003c/p\u003e\n            )}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"flex items-center space-x-2\"\u003e\n            \u003cCheckbox\n              id=\"agreeToTerms\"\n              checked={agreeToTerms}\n              onCheckedChange={(checked) =\u003e setValue(\"agreeToTerms\", checked as boolean)}\n              disabled={isLoading}\n            /\u003e\n            \u003cLabel htmlFor=\"agreeToTerms\" className=\"text-sm font-normal\"\u003e\n              I agree to the{\" \"}\n              \u003ca href=\"/terms\" className=\"underline underline-offset-4 hover:text-primary\"\u003e\n                Terms of Service\n              \u003c/a\u003e{\" \"}\n              and{\" \"}\n              \u003ca href=\"/privacy\" className=\"underline underline-offset-4 hover:text-primary\"\u003e\n                Privacy Policy\n              \u003c/a\u003e\n            \u003c/Label\u003e\n          \u003c/div\u003e\n          {errors.agreeToTerms \u0026\u0026 (\n            \u003cp className=\"text-sm text-red-600\"\u003e{errors.agreeToTerms.message}\u003c/p\u003e\n          )}\n\n          \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n            {isLoading \u0026\u0026 \u003cLoader2 className=\"mr-2 h-4 w-4 animate-spin\" /\u003e}\n            Create account\n          \u003c/Button\u003e\n        \u003c/form\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cp className=\"text-center text-sm text-muted-foreground w-full\"\u003e\n          Already have an account?{\" \"}\n          \u003ca href=\"/login\" className=\"underline underline-offset-4 hover:text-primary\"\u003e\n            Sign in\n          \u003c/a\u003e\n        \u003c/p\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}",
                      "type":  "registry:ui",
                      "path":  "signup-form.tsx"
                  }
              ]
}
